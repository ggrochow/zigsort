---
import Layout from '../layouts/Layout.astro';
---
<script>
class WasmHandler {
  constructor() {
    this.memory = null;
    this.mod = null;
    this.ctx = null;
  }

  log_wasm(s, len) {
    const buf = new Uint8Array(this.memory.buffer, s, len);
    if (len == 0) {
      return;
    }
    console.log(new TextDecoder("utf8").decode(buf));
  }
}

async function instantiateWasmModule(wasm_handler) {
  const wasmEnv = {
    env: {
      logWasm: wasm_handler.log_wasm.bind(wasm_handler)
    },
  };

  const mod = await WebAssembly.instantiateStreaming(
    fetch("pixelsorter.wasm"),
    wasmEnv,
  );

  wasm_handler.memory = mod.instance.exports.memory;
  wasm_handler.mod = mod;

  return mod;
}

  function getImageData(wasm_handler) {
    const canvasEl = document.getElementById("canvas");
    if (!canvasEl) {
      throw new Error("no canvas");
    }


    const context = canvasEl.getContext("2d");
    if (!context) {
      throw new Error("failed to get 2d canvas context")
    }
    wasm_handler.ctx = context;

    return context.getImageData(0, 0, canvasEl.height, canvasEl.width);
  }


  const handler = new WasmHandler();

  instantiateWasmModule(handler)
  .then((mod) => {
      const imageData = getImageData(handler);
      const arr = imageData.data;
      console.log(arr);

      const byteLen = arr.byteLength;
      const pointer = mod.instance.exports.alloc_input_image(byteLen);

      new Uint8ClampedArray(handler.memory.buffer)
        .set(arr, pointer);

      const res = mod.instance.exports.count_array(pointer, arr.length);
      console.log("count_array val", res);

      const resBuf = new Uint8ClampedArray(handler.memory.buffer, pointer, byteLen);
      const newImageData = new ImageData(resBuf, imageData.height, imageData.width);
      handler.ctx.putImageData(newImageData, 0 , 0);
      console.log(resBuf);

      mod.instance.exports.deallocate_input_image(pointer, byteLen);
    })
  .catch((e) => {
    console.error(e);
  })
</script>

<Layout title="Welcome to PixelSort">
	<main>
    <div class="controls">
      <input type='file' id='file_input'>
    </div>
    <canvas id='canvas'>
	</main>
</Layout>

<style>

html, main, body {
  height: 100%;
  width: 100%;
  padding: 0;
  margin: 0;
}

#canvas {
  border: 1px solid red;
}
  
</style
